<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="flowLayoutPanel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>